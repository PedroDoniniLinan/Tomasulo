vendor_name = ModelSim
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/RS/rs.vhd
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/RegFileTomasulo/RegFileTomasulo.vhd
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/MapTable/MapTable.vhd
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/FIFO/FIFO.vhd
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/Decoder/Decoder.vhd
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/Completo/Completo.vhd
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/Completo/Completo.bdf
source_file = 1, d:/programsd/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, d:/programsd/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, d:/programsd/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, d:/programsd/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Users/aasan/OneDrive/Documentos/Poli/10_Semester/OrgArcComp/projectTomasulo/Tomasulo/Completo/db/Completo.cbx.xml
design_name = Decoder
instance = comp, \busy~output\, busy~output, Decoder, 1
instance = comp, \rjMapFile[0]~output\, rjMapFile[0]~output, Decoder, 1
instance = comp, \rjMapFile[1]~output\, rjMapFile[1]~output, Decoder, 1
instance = comp, \rjMapFile[2]~output\, rjMapFile[2]~output, Decoder, 1
instance = comp, \rjMapFile[3]~output\, rjMapFile[3]~output, Decoder, 1
instance = comp, \rjMapFile[4]~output\, rjMapFile[4]~output, Decoder, 1
instance = comp, \rkMapFile[0]~output\, rkMapFile[0]~output, Decoder, 1
instance = comp, \rkMapFile[1]~output\, rkMapFile[1]~output, Decoder, 1
instance = comp, \rkMapFile[2]~output\, rkMapFile[2]~output, Decoder, 1
instance = comp, \rkMapFile[3]~output\, rkMapFile[3]~output, Decoder, 1
instance = comp, \rkMapFile[4]~output\, rkMapFile[4]~output, Decoder, 1
instance = comp, \rjRegFile[0]~output\, rjRegFile[0]~output, Decoder, 1
instance = comp, \rjRegFile[1]~output\, rjRegFile[1]~output, Decoder, 1
instance = comp, \rjRegFile[2]~output\, rjRegFile[2]~output, Decoder, 1
instance = comp, \rjRegFile[3]~output\, rjRegFile[3]~output, Decoder, 1
instance = comp, \rjRegFile[4]~output\, rjRegFile[4]~output, Decoder, 1
instance = comp, \rkRegFile[0]~output\, rkRegFile[0]~output, Decoder, 1
instance = comp, \rkRegFile[1]~output\, rkRegFile[1]~output, Decoder, 1
instance = comp, \rkRegFile[2]~output\, rkRegFile[2]~output, Decoder, 1
instance = comp, \rkRegFile[3]~output\, rkRegFile[3]~output, Decoder, 1
instance = comp, \rkRegFile[4]~output\, rkRegFile[4]~output, Decoder, 1
instance = comp, \opCode[0]~output\, opCode[0]~output, Decoder, 1
instance = comp, \opCode[1]~output\, opCode[1]~output, Decoder, 1
instance = comp, \fuCode[0]~output\, fuCode[0]~output, Decoder, 1
instance = comp, \fuCode[1]~output\, fuCode[1]~output, Decoder, 1
instance = comp, \fuCodeOneHot[0]~output\, fuCodeOneHot[0]~output, Decoder, 1
instance = comp, \fuCodeOneHot[1]~output\, fuCodeOneHot[1]~output, Decoder, 1
instance = comp, \fuCodeOneHot[2]~output\, fuCodeOneHot[2]~output, Decoder, 1
instance = comp, \fuCodeOneHot[3]~output\, fuCodeOneHot[3]~output, Decoder, 1
instance = comp, \writeLine[0]~output\, writeLine[0]~output, Decoder, 1
instance = comp, \writeLine[1]~output\, writeLine[1]~output, Decoder, 1
instance = comp, \RSLineOneHot[0]~output\, RSLineOneHot[0]~output, Decoder, 1
instance = comp, \RSLineOneHot[1]~output\, RSLineOneHot[1]~output, Decoder, 1
instance = comp, \RSLineOneHot[2]~output\, RSLineOneHot[2]~output, Decoder, 1
instance = comp, \RSLineOneHot[3]~output\, RSLineOneHot[3]~output, Decoder, 1
instance = comp, \writeRS~output\, writeRS~output, Decoder, 1
instance = comp, \writeAddr[0]~output\, writeAddr[0]~output, Decoder, 1
instance = comp, \writeAddr[1]~output\, writeAddr[1]~output, Decoder, 1
instance = comp, \writeAddr[2]~output\, writeAddr[2]~output, Decoder, 1
instance = comp, \writeAddr[3]~output\, writeAddr[3]~output, Decoder, 1
instance = comp, \writeAddr[4]~output\, writeAddr[4]~output, Decoder, 1
instance = comp, \writeData[0]~output\, writeData[0]~output, Decoder, 1
instance = comp, \writeData[1]~output\, writeData[1]~output, Decoder, 1
instance = comp, \writeData[2]~output\, writeData[2]~output, Decoder, 1
instance = comp, \writeData[3]~output\, writeData[3]~output, Decoder, 1
instance = comp, \clock~input\, clock~input, Decoder, 1
instance = comp, \clock~inputCLKENA0\, clock~inputCLKENA0, Decoder, 1
instance = comp, \busyRs[1]~input\, busyRs[1]~input, Decoder, 1
instance = comp, \busyRs[2]~input\, busyRs[2]~input, Decoder, 1
instance = comp, \busyRs[0]~input\, busyRs[0]~input, Decoder, 1
instance = comp, \busyRs[3]~input\, busyRs[3]~input, Decoder, 1
instance = comp, \load~input\, load~input, Decoder, 1
instance = comp, \busy~reg0\, busy~reg0, Decoder, 1
instance = comp, \instruction[28]~input\, instruction[28]~input, Decoder, 1
instance = comp, \instruction[27]~input\, instruction[27]~input, Decoder, 1
instance = comp, \instruction[30]~input\, instruction[30]~input, Decoder, 1
instance = comp, \instruction[29]~input\, instruction[29]~input, Decoder, 1
instance = comp, \instruction[31]~input\, instruction[31]~input, Decoder, 1
instance = comp, \Equal0~1\, Equal0~1, Decoder, 1
instance = comp, \instruction[22]~input\, instruction[22]~input, Decoder, 1
instance = comp, \instruction[25]~input\, instruction[25]~input, Decoder, 1
instance = comp, \instruction[21]~input\, instruction[21]~input, Decoder, 1
instance = comp, \instruction[24]~input\, instruction[24]~input, Decoder, 1
instance = comp, \instruction[23]~input\, instruction[23]~input, Decoder, 1
instance = comp, \Equal0~0\, Equal0~0, Decoder, 1
instance = comp, \instruction[5]~input\, instruction[5]~input, Decoder, 1
instance = comp, \instruction[26]~input\, instruction[26]~input, Decoder, 1
instance = comp, \rj~0\, rj~0, Decoder, 1
instance = comp, \rjMapFile[0]~reg0\, rjMapFile[0]~reg0, Decoder, 1
instance = comp, \instruction[6]~input\, instruction[6]~input, Decoder, 1
instance = comp, \rj~1\, rj~1, Decoder, 1
instance = comp, \rjMapFile[1]~reg0\, rjMapFile[1]~reg0, Decoder, 1
instance = comp, \instruction[7]~input\, instruction[7]~input, Decoder, 1
instance = comp, \rj~2\, rj~2, Decoder, 1
instance = comp, \rjMapFile[2]~reg0\, rjMapFile[2]~reg0, Decoder, 1
instance = comp, \instruction[8]~input\, instruction[8]~input, Decoder, 1
instance = comp, \rj~3\, rj~3, Decoder, 1
instance = comp, \rjMapFile[3]~reg0\, rjMapFile[3]~reg0, Decoder, 1
instance = comp, \instruction[9]~input\, instruction[9]~input, Decoder, 1
instance = comp, \rj~4\, rj~4, Decoder, 1
instance = comp, \rjMapFile[4]~reg0\, rjMapFile[4]~reg0, Decoder, 1
instance = comp, \instruction[16]~input\, instruction[16]~input, Decoder, 1
instance = comp, \rk~0\, rk~0, Decoder, 1
instance = comp, \rkMapFile[0]~reg0\, rkMapFile[0]~reg0, Decoder, 1
instance = comp, \instruction[17]~input\, instruction[17]~input, Decoder, 1
instance = comp, \rk~1\, rk~1, Decoder, 1
instance = comp, \rkMapFile[1]~reg0\, rkMapFile[1]~reg0, Decoder, 1
instance = comp, \instruction[18]~input\, instruction[18]~input, Decoder, 1
instance = comp, \rk~2\, rk~2, Decoder, 1
instance = comp, \rkMapFile[2]~reg0\, rkMapFile[2]~reg0, Decoder, 1
instance = comp, \instruction[19]~input\, instruction[19]~input, Decoder, 1
instance = comp, \rk~3\, rk~3, Decoder, 1
instance = comp, \rkMapFile[3]~reg0\, rkMapFile[3]~reg0, Decoder, 1
instance = comp, \instruction[20]~input\, instruction[20]~input, Decoder, 1
instance = comp, \rk~4\, rk~4, Decoder, 1
instance = comp, \rkMapFile[4]~reg0\, rkMapFile[4]~reg0, Decoder, 1
instance = comp, \rjRegFile[0]~reg0\, rjRegFile[0]~reg0, Decoder, 1
instance = comp, \rjRegFile[1]~reg0\, rjRegFile[1]~reg0, Decoder, 1
instance = comp, \rjRegFile[2]~reg0\, rjRegFile[2]~reg0, Decoder, 1
instance = comp, \rjRegFile[3]~reg0\, rjRegFile[3]~reg0, Decoder, 1
instance = comp, \rjRegFile[4]~reg0\, rjRegFile[4]~reg0, Decoder, 1
instance = comp, \rkRegFile[0]~reg0\, rkRegFile[0]~reg0, Decoder, 1
instance = comp, \rkRegFile[1]~reg0\, rkRegFile[1]~reg0, Decoder, 1
instance = comp, \rkRegFile[2]~reg0\, rkRegFile[2]~reg0, Decoder, 1
instance = comp, \rkRegFile[3]~reg0\, rkRegFile[3]~reg0, Decoder, 1
instance = comp, \rkRegFile[4]~reg0\, rkRegFile[4]~reg0, Decoder, 1
instance = comp, \Equal0~2\, Equal0~2, Decoder, 1
instance = comp, \opCode[0]~reg0\, opCode[0]~reg0, Decoder, 1
instance = comp, \opCode[1]~reg0\, opCode[1]~reg0, Decoder, 1
instance = comp, \writeLine~0\, writeLine~0, Decoder, 1
instance = comp, \writeLine[0]~reg0\, writeLine[0]~reg0, Decoder, 1
instance = comp, \writeLine~1\, writeLine~1, Decoder, 1
instance = comp, \writeLine[1]~reg0\, writeLine[1]~reg0, Decoder, 1
instance = comp, \lineId~0\, lineId~0, Decoder, 1
instance = comp, \lineId[0]\, lineId[0], Decoder, 1
instance = comp, \lineId~1\, lineId~1, Decoder, 1
instance = comp, \lineId[1]\, lineId[1], Decoder, 1
instance = comp, \Decoder0~0\, Decoder0~0, Decoder, 1
instance = comp, \RSLineOneHot[0]~reg0\, RSLineOneHot[0]~reg0, Decoder, 1
instance = comp, \Decoder0~1\, Decoder0~1, Decoder, 1
instance = comp, \RSLineOneHot[1]~reg0\, RSLineOneHot[1]~reg0, Decoder, 1
instance = comp, \Decoder0~2\, Decoder0~2, Decoder, 1
instance = comp, \RSLineOneHot[2]~reg0\, RSLineOneHot[2]~reg0, Decoder, 1
instance = comp, \Decoder0~3\, Decoder0~3, Decoder, 1
instance = comp, \RSLineOneHot[3]~reg0\, RSLineOneHot[3]~reg0, Decoder, 1
instance = comp, \writeRS~0\, writeRS~0, Decoder, 1
instance = comp, \writeRS~reg0\, writeRS~reg0, Decoder, 1
instance = comp, \instruction[0]~input\, instruction[0]~input, Decoder, 1
instance = comp, \writeAddr~0\, writeAddr~0, Decoder, 1
instance = comp, \writeAddr[0]~reg0\, writeAddr[0]~reg0, Decoder, 1
instance = comp, \instruction[1]~input\, instruction[1]~input, Decoder, 1
instance = comp, \writeAddr~1\, writeAddr~1, Decoder, 1
instance = comp, \writeAddr[1]~reg0\, writeAddr[1]~reg0, Decoder, 1
instance = comp, \instruction[2]~input\, instruction[2]~input, Decoder, 1
instance = comp, \writeAddr~2\, writeAddr~2, Decoder, 1
instance = comp, \writeAddr[2]~reg0\, writeAddr[2]~reg0, Decoder, 1
instance = comp, \instruction[3]~input\, instruction[3]~input, Decoder, 1
instance = comp, \writeAddr~3\, writeAddr~3, Decoder, 1
instance = comp, \writeAddr[3]~reg0\, writeAddr[3]~reg0, Decoder, 1
instance = comp, \instruction[4]~input\, instruction[4]~input, Decoder, 1
instance = comp, \writeAddr~4\, writeAddr~4, Decoder, 1
instance = comp, \writeAddr[4]~reg0\, writeAddr[4]~reg0, Decoder, 1
instance = comp, \writeData[0]~reg0\, writeData[0]~reg0, Decoder, 1
instance = comp, \writeData[1]~reg0\, writeData[1]~reg0, Decoder, 1
instance = comp, \instruction[10]~input\, instruction[10]~input, Decoder, 1
instance = comp, \instruction[11]~input\, instruction[11]~input, Decoder, 1
instance = comp, \instruction[12]~input\, instruction[12]~input, Decoder, 1
instance = comp, \instruction[13]~input\, instruction[13]~input, Decoder, 1
instance = comp, \instruction[14]~input\, instruction[14]~input, Decoder, 1
instance = comp, \instruction[15]~input\, instruction[15]~input, Decoder, 1
instance = comp, \~QUARTUS_CREATED_GND~I\, ~QUARTUS_CREATED_GND~I, Decoder, 1
